import com.github.jknack.handlebars.Handlebars
import com.github.jknack.handlebars.Template
import org.apache.commons.io.IOUtils
import groovy.transform.Field 

/**
 * Tasks for creating and deploying Beagle’s web presence
 *
 * @author Joshua Gleitze
 */

buildscript {
	repositories {
		mavenCentral()
	}
	
	dependencies {
		// handlebars.java to render the templates (https://github.com/jknack/handlebars.java)
		classpath group: 'com.github.jknack', name: 'handlebars', version: '4.+'
		// gradle-git to manage the gh-pages branch (https://github.com/ajoberstar/gradle-git)
    	classpath group: 'org.ajoberstar', name: 'gradle-git', version: '1.3.+'
    	// commons IO because I’m lazy
    	classpath group: 'commons-io', name: 'commons-io', version: '2.4+'
	}
}	

task web(type: Sync) {
    inputs.dir "$projectDir/src/web/handlebars"
    
    group "Build"
    description "Renders Beagle’s web presence."
    
    CompileHandlebars.rootTemplateFile = file("$projectDir/src/web/handlebars/roottemplate.handlebars")
    
	from "$projectDir/src/web/handlebars/pages"
	into "$buildDir/web"
	filter CompileHandlebars.class
	rename '^(.*)\\.handlebars$', '$1.html'
}

public class CompileHandlebars extends FilterReader {
	private static final Handlebars handlebars = new Handlebars()
	private static File rootTemplateFile
	private static Template rootTemplate

	public CompileHandlebars(final Reader templateReader) {
		super(templateReader)
		final String templateString = IOUtils.toString(templateReader)
		final BeagleWebContext context = new BeagleWebContext()
		handlebars.registerHelpers(new BeagleHelpers(context))
		final Template template = handlebars.compileInline(templateString)
		context.content = template.apply(context)
		String rendered = rootTemplate.apply(context)
		this.in = new StringReader(rendered)
	}
	
	public static void setRootTemplateFile(File templateFile) {
		rootTemplateFile = templateFile
		rootTemplate = handlebars.compileInline(rootTemplateFile.text)
	}
}


public class BeagleWebContext {
	def test = 'Mama'
	String title = ''
	String content = ''
}

class BeagleHelpers {
	private BeagleWebContext beagleContext;
	
	public BeagleHelpers(BeagleWebContext beagleContext) {
		this.beagleContext = beagleContext
	}
		
	public String setTitle(String title) {
		beagleContext.title = title
		return ''
	}
}