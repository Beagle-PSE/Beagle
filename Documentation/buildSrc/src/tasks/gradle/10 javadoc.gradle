/**
 * Tasks to render the javadoc of all java source projects.
 *
 * @author Joshua Gleitze
 * @author Annika Berger
 */
 

FileTree getAllInputFiles() {
	def result
	rootProject.javaSubprojects.each { project ->
		def srcTree = fileTree("$project.projectDir/src/main/java").include("**/*.java")
		if (result == null) {
			result = srcTree
		} else {
			result.add(scrTree)
		}
	}
	return result
}

task javadoc(type: Javadoc) {
	group 'Documentation'
	description 'Generates Javadoc API documentation for the main source code.'
	
	source getAllInputFiles()
	destinationDir = file("$buildDir/javadoc")

	options.overview "$projectDir/src/javadoc/html/Overview.html"
	options.encoding = "UTF-8"
}
 
def rendersrc = fileTree("$projectDir/src").include('common/**').include('javadoc/lyx/**')
 
task glossary(type: LyXRenderTask) {
	
	group 'Documentation'
	description 'Renders the Glossary.'
	
	from rendersrc
	document "javadoc/lyx/Glossary.lyx"
	into javadoc.destinationDir
	
	glossary true
	bibliography true
}

build.dependsOn javadoc, glossary

