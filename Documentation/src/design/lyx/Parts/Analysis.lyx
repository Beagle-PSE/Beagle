#LyX 2.1 created this file. For more info see http://www.lyx.org/
\lyxformat 474
\begin_document
\begin_header
\textclass sdqthesis
\use_default_options true
\master ../Design and Architecture.lyx
\maintain_unincluded_children false
\language british
\language_package default
\inputencoding utf8
\fontencoding global
\font_roman default
\font_sans default
\font_typewriter default
\font_math auto
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\spacing single
\use_hyperref false
\papersize default
\use_geometry true
\use_package amsmath 2
\use_package amssymb 1
\use_package cancel 1
\use_package esint 1
\use_package mathdots 1
\use_package mathtools 1
\use_package mhchem 1
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine basic
\cite_engine_type default
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 1
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Chapter
The Analysis
\end_layout

\begin_layout Standard
At Beagle’s core, the Analysis Controller controls all analysis activity
 by instructing the Measurement Controller, the Measurement Result Analysers,
 the Proposed Expression Analysers and the Final Judge.
 While not contributing itself, it is charge of all control flow during
 analysis.
\end_layout

\begin_layout Standard
Analysis Controller#perform Analysis performs a complete analysis, starting
 by measuring the examined software, and continuing to analyse until the
 Final Judge reports that the analysis is finished.
 There is always at most one Measurement Tool, Measurement Result Analyser,
 Proposed Expression Analyser or Final Judge having the control flow at
 any given moment during the execution of Analysis Controller#perform Analysis
 (“the analysis loop”).
\end_layout

\begin_layout Standard
An iteration of the analysis loop starts by asking the Measurement Controller
 whether it wants to conduct measurements for the current blackboard state---whi
ch will usually be the case if there is something not yet measured---, and
 if so, calling its #measure method.
 The Measurement Controller will then instruct the Measurement Tools to
 measure.
 Usually, it will tell every tool to measure all new 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
gls{SEFF}
\end_layout

\end_inset

 Elements.
\end_layout

\begin_layout Standard
After that, the main loop invokes one arbitrary chosen Measurement Result
 Analyser reporting to be able to contribute to the current blackboard state.
 This analyser may then propose expressions describing the parametric dependenci
es of 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
gls{SEFF}
\end_layout

\end_inset

 Elements’ measurement results.
 If there is no such analyser, an arbitrary chosen Proposed Expression Analyser
 reporting to be able to contribute will be invoked.
 It may then propose more expressions based on the ones the ones Measurement
 Result Analysers added to the blackboard, usually trying to improve them.
 If there Final Judge will be called.
 It decides whether enough information has been collected and Beagle can
 terminate.
 If this is the case, it also creates or selects the final result for each
 item that has proposed results.
\end_layout

\begin_layout Standard
The analysis loop will then be repeated until the Final Judge was called
 and its #judge method returned true.
 Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "alg:Beagle-Controller#perform-Analys"

\end_inset

 sketches the procedure.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{algorithm}[H]
\end_layout

\begin_layout Plain Layout

finished $
\backslash
coloneqq $ false
\backslash
;
\end_layout

\begin_layout Plain Layout


\backslash
;
\end_layout

\begin_layout Plain Layout

romraBlackboardView $
\backslash
coloneqq $ Read-Only Measurement Result Analyser Blackboard View.construct(blackb
oard)
\backslash
;
\end_layout

\begin_layout Plain Layout

mraBlackboardView $
\backslash
coloneqq $ MeasurementController Blackboard View.construct(blackboard)
\backslash
;
\end_layout

\begin_layout Plain Layout

ropeBlackboardView $
\backslash
coloneqq $ Read-Only Proposed Expression Analyser Blackboard View.construct(black
board)
\backslash
;
\end_layout

\begin_layout Plain Layout

peBlackboardView $
\backslash
coloneqq $ Proposed Expressions Blackboard View.construct(blackboard)
\backslash
;
\end_layout

\begin_layout Plain Layout


\backslash
;
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout


\backslash
While {$
\backslash
neg $finished} {
\end_layout

\begin_layout Plain Layout

	
\backslash
uIf {measurement controller.can measure(blackboard)} {
\end_layout

\begin_layout Plain Layout

		measurement controller.measure(blackboard)
\backslash
;
\end_layout

\begin_layout Plain Layout

	} 
\backslash
uElseIf {$
\backslash
exists
\backslash
 analyser 
\backslash
in measuremet
\backslash
 result
\backslash
 analysers: analyser.can
\backslash
 contribute(romraBlackboardView)$} {
\end_layout

\begin_layout Plain Layout

		analyser.contribute(mraBlackboardView)
\end_layout

\begin_layout Plain Layout

	} 
\backslash
uElseIf {$
\backslash
exists
\backslash
 analyser 
\backslash
in proposed
\backslash
 expression
\backslash
 analysers: analyser.can
\backslash
 contribute(ropeBlackboardView)$} {
\end_layout

\begin_layout Plain Layout

		analyser.contribute(peBlackboardView)
\end_layout

\begin_layout Plain Layout

	} 
\backslash
Else {
\end_layout

\begin_layout Plain Layout

		finished $
\backslash
coloneqq $ final judge.judge(blackboard)
\end_layout

\begin_layout Plain Layout

	}
\end_layout

\begin_layout Plain Layout

}
\end_layout

\begin_layout Plain Layout


\backslash
end{algorithm}
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "alg:Beagle-Controller#perform-Analys"

\end_inset


\begin_inset Argument 1
status open

\begin_layout Plain Layout
Beagle Controller#perform Analysis() pseudocode
\end_layout

\end_inset

Beagle Controller#perform Analysis() in pseudocode.
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Graphics
	filename ../../umlet/Sequence Diagram perform Analysis().uxf.pdf
	width 90text%
	height 100pheight%
	keepAspectRatio

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
UML Sequence diagram for Analysis Controller#perform Analysis()
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Graphics
	filename ../../umlet/Sequence Diagram can measure().uxf.pdf
	width 90text%
	height 100pheight%
	keepAspectRatio

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
UML Sequence diagram for Measurement Controller#can measure()
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Graphics
	filename ../../umlet/Sequence Diagram measure().uxf.pdf
	width 90text%
	height 100pheight%
	keepAspectRatio

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
UML Sequence diagram for Measurement Controller#measure()
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Graphics
	filename ../../umlet/Sequence Diagram Measurement Result Analyser_contribute().uxf.pdf
	width 90text%
	height 100pheight%
	keepAspectRatio

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
UML Sequence diagram for Measurement Result Analyser#contribute()
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Graphics
	filename ../../umlet/Sequence Diagram Proposed Expression Analyser_contribute().uxf.pdf
	width 90text%
	height 100pheight%
	keepAspectRatio

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
UML Sequence diagram for Proposed Expression Analyser#contribute()
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Graphics
	filename ../../umlet/Sequence Diagram judge().uxf.pdf
	width 90text%
	height 100pheight%
	keepAspectRatio

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
UML Sequence diagram for Final Judge#judge()
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Section
Measurement
\end_layout

\begin_layout Section
Final Judge
\end_layout

\end_body
\end_document
