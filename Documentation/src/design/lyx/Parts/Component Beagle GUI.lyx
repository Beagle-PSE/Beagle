#LyX 2.1 created this file. For more info see http://www.lyx.org/
\lyxformat 474
\begin_document
\begin_header
\textclass sdqthesis
\use_default_options true
\master ../Design and Architecture.lyx
\maintain_unincluded_children false
\language british
\language_package default
\inputencoding utf8
\fontencoding global
\font_roman default
\font_sans default
\font_typewriter default
\font_math auto
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\spacing single
\use_hyperref false
\papersize default
\use_geometry true
\use_package amsmath 2
\use_package amssymb 1
\use_package cancel 1
\use_package esint 1
\use_package mathdots 1
\use_package mathtools 1
\use_package mhchem 1
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine basic
\cite_engine_type default
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 1
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Chapter
Component: Beagle GUI
\end_layout

\begin_layout Standard
\begin_inset Note Note
status open

\begin_layout Plain Layout
Component: Beagle GUI
\end_layout

\begin_layout Plain Layout
- Describe most important classes
\end_layout

\begin_layout Plain Layout
- Give reasons for chosen design
\end_layout

\begin_layout Plain Layout
- Describe chosen design patterns (Model-View-Controller!)
\end_layout

\begin_layout Plain Layout
List all associated packages
\end_layout

\end_inset


\end_layout

\begin_layout Section
Overview
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename ../../GUI.uxf.pdf
	width 90text%
	height 100pheight%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
\begin_inset Argument 1
status open

\begin_layout Plain Layout
GUI Classes
\end_layout

\end_inset

UML class diagram of the GUI classes.
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Section
Most Important Classes
\end_layout

\begin_layout Subsection
GUI Controller
\end_layout

\begin_layout Standard
GUI Controller is the heart of the GUI.
 An object of it is created (and the method open() is called) to open the
 GUI.
 This class controls the flow of actions over the entire analysis but gives
 control to Beagle Controller after the user started the analysis.
\end_layout

\begin_layout Subsection
Beagle Controller
\end_layout

\begin_layout Standard
Beagle Controller becomes active after the user started the analysis and
 unless the analysis is paused is active until the analysis is finished
 or aborted.
 Beagle Controller is commanded by GUI Controller to start, pause, continue,
 and abort the analysis.
\end_layout

\begin_layout Section
Control Flow
\end_layout

\begin_layout Standard
The GUI Controller is called via actions originating from context menu clicks.
 An object of GUI Controller is created there and the method open() is called
 on it.
 It creates an object of User Configuration witch which it from now on will
 be associated with.
 It then creates a new Beagle Analysis Wizard object associated with the
 same User Configuration object.
 Beagle Analysis Wizard then creates its Wizard Pages which are also associated
 with the same User Configuration objects.
 That's because this object stores everything the user configures, so all
 pages of the Wizard need to read from and/or write on it.
\end_layout

\begin_layout Standard
After the wizard has finished, control is returned to the GUI Controller
 object which then opens a dialog providing the user with the information
 that the analysis is running and the options to pause/continue or to abort
 the analysis.
 To get the analysis running, pausing, continuing, or to abort it, the GUI
 Controller objects calls the corresponding methods of Beagle Controller
 when it receives information that the wizard has finished or a button in
 the dialog the GUI Controller objects opens after the wizard has finished
 has been clicked.
\end_layout

\begin_layout Section
Reasons for Chosen Design
\end_layout

\begin_layout Standard
This design has been chosen for the clarity of its flow of information and
 control.
 Information is stored either locally or in a single object every different
 object knows (the User Configuration object) because only the settings
 of the user need to be transported through all objects.
 The user always has control over the analysis because information can be
 transported from the dialog, though the GUI Controller object, to the Beagle
 Controller which controls the analysis.
\end_layout

\begin_layout Section
Chosen Design Patterns
\end_layout

\end_body
\end_document
