#LyX 2.1 created this file. For more info see http://www.lyx.org/
\lyxformat 474
\begin_document
\begin_header
\textclass sdqthesis
\use_default_options true
\master ../Design and Architecture.lyx
\maintain_unincluded_children false
\language british
\language_package default
\inputencoding utf8
\fontencoding global
\font_roman default
\font_sans default
\font_typewriter default
\font_math auto
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\spacing single
\use_hyperref false
\papersize default
\use_geometry true
\use_package amsmath 2
\use_package amssymb 1
\use_package cancel 1
\use_package esint 1
\use_package mathdots 1
\use_package mathtools 1
\use_package mhchem 1
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine basic
\cite_engine_type default
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 1
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\listings_params "mathescape=true"
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Chapter
Beagle Core Component
\end_layout

\begin_layout Standard
\begin_inset Note Note
status open

\begin_layout Plain Layout
Component: Beagle Core
\end_layout

\begin_layout Plain Layout
- Describe most important classes
\end_layout

\begin_layout Plain Layout
- Give reasons for chosen design
\end_layout

\begin_layout Plain Layout
-Describe chosen design patterns
\end_layout

\begin_layout Plain Layout
- Describe Evaluable Expressions
\end_layout

\begin_layout Plain Layout
- Describe conversion from and to Palladio
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout
List all associated packages
\end_layout

\end_inset


\end_layout

\begin_layout Section
Overview
\end_layout

\begin_layout Standard
Beagle Core contains all management logic required to perform dynamic analysis
 on software.
 It does, however, not contain any logic to actually run measurements or
 analyse parametric dependencies.
 Instead, it requires interfaces offering this functionality: 
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Graphics
	filename ../../umlet/Beagle Core Component.uxf.pdf
	width 80text%
	height 100theight%
	keepAspectRatio

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
The Beagle Core Component and its interfaces
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Graphics
	filename ../../umlet/Packages.uxf.pdf
	width 100text%
	height 100pheight%
	keepAspectRatio

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Beagle Core’s separation into Packages
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Graphics
	filename ../../umlet/Beagle Core.uxf.pdf
	width 100text%
	height 100theight%
	keepAspectRatio

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Class overview of Beagle Core
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Section
The Blackboard
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Graphics
	filename ../../umlet/Blackboard.uxf.pdf
	width 100text%
	height 100theight%
	keepAspectRatio

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
The Blackboard and its views
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Graphics
	filename ../../umlet/Blackboard Layers.uxf.pdf
	width 90text%
	height 100pheight%
	keepAspectRatio

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Abstraction Layers on the Blackboard
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Section
Controller Classes
\end_layout

\begin_layout Standard

At Beagle’s core, 
\family typewriter
\lang british
Analysis Controller
\family default
 controls all analysis activity by instructing the 
\family typewriter
Measurement Controller
\family default
, the 
\family typewriter
Measurement Result Analysers
\family default
, the 
\family typewriter
Proposed Expression Analysers
\family default
 and the 
\family typewriter
Final Judge
\family default
.

\lang british
 While not contributing itself, it is charge of all control flow during
 analysis.
\end_layout

\begin_layout Standard
\begin_inset listings
inline true
status open

\begin_layout Plain Layout

Analysis Controller#perform Analysis
\end_layout

\end_inset

 performs a complete analysis, starting by measuring the examined software,
 and continuing to analyse until the 
\begin_inset listings
inline true
status open

\begin_layout Plain Layout

Final Judge
\end_layout

\end_inset

 reports that the analysis is finished.
 There is always at most one 
\begin_inset listings
inline true
status open

\begin_layout Plain Layout

Measurement Tool
\end_layout

\end_inset

, 
\begin_inset listings
inline true
status open

\begin_layout Plain Layout

Measurement Result Analyser
\end_layout

\end_inset

, 
\begin_inset listings
inline true
status open

\begin_layout Plain Layout

Proposed Expression Analyser
\end_layout

\end_inset

 or 
\begin_inset listings
inline true
status open

\begin_layout Plain Layout

Final Judge
\end_layout

\end_inset

 running at any given moment during the execution of 
\family typewriter
Analysis Controller#perform Analysis
\family default
 (“the main loop”).
\end_layout

\begin_layout Standard
An iteration of the main loop starts by asking the 
\begin_inset listings
inline true
status open

\begin_layout Plain Layout

Measurement Controller
\end_layout

\end_inset

 whether it wants to conduct measurements for the current blackboard state---whi
ch will usually be the case if there is something not yet measured---, and
 if so, calling its 
\begin_inset listings
inline true
status open

\begin_layout Plain Layout

#measure
\end_layout

\end_inset

 method.
 The 
\begin_inset listings
inline true
status open

\begin_layout Plain Layout

Measurement Controller
\end_layout

\end_inset

 will then instruct the 
\begin_inset listings
inline true
status open

\begin_layout Plain Layout

Measurement Tool
\end_layout

\end_inset

s to measure.
 Usually, it will tell every tool to measure all new 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
gls{SEFF}
\end_layout

\end_inset

 Elements.
\end_layout

\begin_layout Standard
After that, the main loop invokes one arbitrary chosen 
\begin_inset listings
inline true
status open

\begin_layout Plain Layout

Measurement Result Analyser
\end_layout

\end_inset

 reporting to be able to contribute to the current blackboard state.
 This analyser may then propose expressions describing the parametric dependenci
es of 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
gls{SEFF}
\end_layout

\end_inset

 Elements’ measurement results.
 If there is no such analyser, an arbitrary chosen 
\begin_inset listings
inline true
status open

\begin_layout Plain Layout

Proposed Expression Analyser
\end_layout

\end_inset

 reporting to be able to contribute will be invoked.
 It may then propose more expressions based on the ones the 
ones 
\lang british

\begin_inset listings
inline true
status open

\begin_layout Plain Layout

Measurement Result Analyser
\end_layout

\end_inset

s added to the blackboard, usually trying to improve them.
 If there 
\begin_inset listings
inline true
status open

\begin_layout Plain Layout

Final Judge
\end_layout

\end_inset

ii will be called.
 It decides whether enough information has been collected and Beagle can
 terminate.
 If this is the case, it also creates or selects the final result for each
 item that has proposed results.
\end_layout

\begin_layout Standard
The main loop will then be repeated until the 
\begin_inset listings
inline true
status open

\begin_layout Plain Layout

Final Judge
\end_layout

\end_inset

 was called and its 
\begin_inset listings
inline true
status open

\begin_layout Plain Layout

#judge
\end_layout

\end_inset

 method returned 
\begin_inset listings
inline true
status open

\begin_layout Plain Layout

true
\end_layout

\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset Float algorithm
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout

finished $
\backslash
coloneqq $ false
\backslash
;
\end_layout

\begin_layout Plain Layout


\backslash
;
\end_layout

\begin_layout Plain Layout

romraBlackboardView $
\backslash
coloneqq $ Read-Only Measurement Result Analyser Blackboard View.construct(blackb
oard)
\backslash
;
\end_layout

\begin_layout Plain Layout

mraBlackboardView $
\backslash
coloneqq $ MeasurementController Blackboard View.construct(blackboard)
\backslash
;
\end_layout

\begin_layout Plain Layout

ropeBlackboardView $
\backslash
coloneqq $ Read-Only Proposed Expression Analyser Blackboard View.construct(black
board)
\backslash
;
\end_layout

\begin_layout Plain Layout

peBlackboardView $
\backslash
coloneqq $ Proposed Expressions Blackboard View.construct(blackboard)
\backslash
;
\end_layout

\begin_layout Plain Layout


\backslash
;
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout


\backslash
While {$
\backslash
neg $finished} {
\end_layout

\begin_layout Plain Layout

	
\backslash
uIf {measurement controller.can measure(blackboard)} {
\end_layout

\begin_layout Plain Layout

		measurement controller.measure(blackboard)
\backslash
;
\end_layout

\begin_layout Plain Layout

	} 
\backslash
uElseIf {$
\backslash
exists
\backslash
 analyser 
\backslash
in measuremet
\backslash
 result
\backslash
 analysers: analyser.can
\backslash
 contribute(romraBlackboardView)$} {
\end_layout

\begin_layout Plain Layout

		analyser.contribute(mraBlackboardView)
\end_layout

\begin_layout Plain Layout

	} 
\backslash
uElseIf {$
\backslash
exists
\backslash
 analyser 
\backslash
in proposed
\backslash
 expression
\backslash
 analysers: analyser.can
\backslash
 contribute(ropeBlackboardView)$} {
\end_layout

\begin_layout Plain Layout

		analyser.contribute(peBlackboardView)
\end_layout

\begin_layout Plain Layout

	} 
\backslash
Else {
\end_layout

\begin_layout Plain Layout

		finished $
\backslash
coloneqq $ final judge.judge(blackboard)
\end_layout

\begin_layout Plain Layout

	}
\end_layout

\begin_layout Plain Layout

}
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
\begin_inset Argument 1
status open

\begin_layout Plain Layout
Beagle Controller#perform Analysis()
\end_layout

\end_inset

Beagle Controller#perform Analysis() in pseudocode
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename UML Diagrams/Controller_Classes.PDF
	width 90text%
	height 100pheight%
	keepAspectRatio

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
\begin_inset Argument 1
status open

\begin_layout Plain Layout
Controller classes
\end_layout

\end_inset

UML class diagram of the controller classes.
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Section
Evaluable Expressions
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Graphics
	filename ../../umlet/Evaluable Expression.uxf.pdf
	width 100text%
	height 100theight%
	keepAspectRatio

\end_inset


\begin_inset Caption Standard

\begin_layout Plain Layout
Evaluable Measurement Interface and its implementations
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Section
Conversion from and to Palladio
\end_layout

\end_body
\end_document
