/**
 * Collections of subprojects. Useful for configure blocks: configure(prototypeSubprojects){}
 */
/**
 * Prototype subprojects. Detected by being in the 'Prototypes' subfolder
 */
ext.prototypeSubprojects = subprojects.findAll { project ->
	project.name.startsWith('Prototype')
}
/**
 * Java subprojects. Detected by having the 'src/main/java' or 'src/test/java' folder.
 */
ext.javaSubprojects = allprojects.findAll { project ->
	file("$project.projectDir/src/main/java").exists() || file("$project.projectDir/src/test/java").exists()
}
/**
 * Eclipse Plugin subprojects. Detected by having 'org.eclipse.pde.PluginNature' in their
 * .project file.
 */
ext.eclipseSubprojects = allprojects.findAll { project ->
	file("$project.projectDir/.project").with { 
		exists() && text.contains('org.eclipse.pde.PluginNature')
	}
}

allprojects {
	repositories {
		jcenter()
		mavenCentral()
	}
	
	apply plugin: BasePlugin
	
	buildscript {
		fileTree("$projectDir/buildSrc/src/tasks/gradle/buildscript-dependencies").include('*.gradle').each { file ->
		 	project.apply from: file, to: buildscript
		} 
	}

	// import all tasks defined in src/build/groovy
	fileTree("$projectDir/buildSrc/src/tasks/gradle").include('*.gradle').sort().each { file ->
		project.apply from: file
	} 
	
	defaultTasks 'build'
}
