/**
 * Deploys projects that are used to test Beagle.
 *
 * @author Joshua Gleitze
 */
 
buildscript {
	repositories {
		jcenter()
	}
	
	dependencies {
    	classpath group: 'de.undercouch', name: 'gradle-download-task', version: '2.1.0'
	}
}

apply plugin: 'de.undercouch.download'

def tmp = file("$buildDir/tmp/test-resources")
tmp.mkdirs()

def cocomeDest = file("$projectDir/src/test/resources/CoCoME")
def appsensorDest = file("$projectDir/src/test/resources/AppSensor")

/**
 * Shifts the relative destination path of a FileCopyDetails object one level up (discards the 
 * top most path segments). Assumes that the path is not at the top most level.
 */
def shiftUp =  { FileCopyDetails fcp ->
	def pathsegments = fcp.relativeSourcePath.segments[1..-1] as String[]
	fcp.relativePath = new RelativePath(!fcp.file.isDirectory(), pathsegments)
}
            

task downloadCocome {
	group "Build Setup"
	description "Deploys CoCoME to be used for testing Beagle"
	outputs.dir cocomeDest
	
	doLast {
		download {
			src ([
				'http://www.cocome.org/downloads/implementation/cocome-impl.zip',
				'http://www.cocome.org/downloads/implementation/cocome-systests.zip',
				'http://www.cocome.org/downloads/implementation/cocome-testdriver.zip'
			])
			onlyIfNewer true
			quiet true
			dest tmp
		}
		
		copy {
			from zipTree("$tmp/cocome-impl.zip"), zipTree("$tmp/cocome-systests.zip"), zipTree("$tmp/cocome-testdriver.zip")
			eachFile shiftUp
			includeEmptyDirs false
			into cocomeDest
		}
	}
}

task downloadAppSensor {
	group "Build Setup"
	description "Deploys AppSensor to be used for testing Beagle"
	outputs.dir appsensorDest
	
	doLast {
		rootProject.download {
			src 'https://github.com/jtmelton/appsensor/archive/v2.2.0.zip'
			onlyIfNewer true
			quiet true
			dest tmp
		}
		
		copy {
			from zipTree("$tmp/v2.2.0.zip")
			eachFile shiftUp
			includeEmptyDirs false
			into appsensorDest
		}
	}
}

task cleanTestProjects {
	description "Removes all test projects downloaded."
	group "Build Setup"

	doLast {
		delete cocomeDest, appsensorDest
	}	
}

configure(javaSubprojects) {
	test.dependsOn rootProject.tasks.downloadCocome
	test.dependsOn rootProject.tasks.downloadAppSensor
	clean.dependsOn rootProject.tasks.cleanTestProjects
}
	