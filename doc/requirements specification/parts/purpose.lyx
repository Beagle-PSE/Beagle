#LyX 2.1 created this file. For more info see http://www.lyx.org/
\lyxformat 474
\begin_document
\begin_header
\textclass sdqthesis
\use_default_options true
\master ../requirements specification.lyx
\maintain_unincluded_children false
\language british
\language_package babel
\inputencoding utf8
\fontencoding global
\font_roman default
\font_sans default
\font_typewriter default
\font_math auto
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\spacing single
\use_hyperref false
\papersize default
\use_geometry true
\use_package amsmath 2
\use_package amssymb 1
\use_package cancel 1
\use_package esint 1
\use_package mathdots 1
\use_package mathtools 1
\use_package mhchem 1
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine basic
\cite_engine_type default
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 1
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Chapter
Purpose and Goals
\end_layout

\begin_layout Standard
\begin_inset Note Note
status open

\begin_layout Plain Layout
This part is a general introduction for the reader.
 It is written in continuous text.
\end_layout

\begin_layout Plain Layout
The reader should be introduced in the general conditions that make this
 software useful.
\end_layout

\begin_layout Plain Layout
It should explain the starting point (i.e.
 analysis of component based software & reverse engineering of the model
 from source code), the shortcomings and challenge (i.e.
 no resource demand annotations), and how our software will try to solve
 that.
\end_layout

\begin_layout Plain Layout
It can be regarded as the document’s abstract.
 Therefore, it should give the reader an overview about what this software
 is going to do, such that he will have no surprises when reading the following
 chapters.
\end_layout

\end_inset


\end_layout

\begin_layout Section
Must Have Criteria
\end_layout

\begin_layout Standard
\begin_inset Note Note
status open

\begin_layout Plain Layout
Specifies criteria our software must fulfil to be considered a success.
\end_layout

\begin_layout Plain Layout
Keep in mind to only specify the 
\emph on
minimum
\emph default
 amount of requirements to make the software useful.
 That means that any criterion not 
\emph on
required
\emph default
 to give the software a right to exist should go into the nice to have part.
\end_layout

\begin_layout Plain Layout
But be nonetheless precise and leave nothing out.
 
\end_layout

\begin_layout Plain Layout
Make sure to differentiate these criteria and the requirements! The criteria
 listed here a bullet points for features and are most of the time not measurabl
e (but surely verifiable!).
 They are what a non-IT client would specify.
 Requirements, on the other hand, are quantified, measurable atomic feature
 descriptions.
\end_layout

\begin_layout Plain Layout
Reference notation is /C#/
\end_layout

\end_inset


\end_layout

\begin_layout Section
Nice to Have Criteria
\end_layout

\begin_layout Standard
\begin_inset Note Note
status open

\begin_layout Plain Layout
Complements the above part.
 Criteria listed here don’t need to be matched for the software to be successful.
\end_layout

\begin_layout Plain Layout
This part should be visionary and state as many features that would add
 additional value to the software.
 It should also prove that we made up our minds about our software and can
 exactly imagine its usefulness.
 Criteria specified here may also be implemented by others, long after we’ve
 finished our project.
\end_layout

\begin_layout Plain Layout
Reference notation is /OC#/
\end_layout

\end_inset


\end_layout

\begin_layout Section
Boundary
\end_layout

\begin_layout Standard
\begin_inset Note Note
status open

\begin_layout Plain Layout
This part concludes this chapter’s thought of train.
\end_layout

\begin_layout Plain Layout
Having specified what our software must and should do, we now specify what
 will never be its purpose.
 Any good definition does not only include, but also exclude features.
 This chapter does further prove that we exactly understand what our software
 is – and what it’s not.
\end_layout

\begin_layout Plain Layout
Reference notation is /B#/
\end_layout

\end_inset


\end_layout

\end_body
\end_document
