#LyX 2.1 created this file. For more info see http://www.lyx.org/
\lyxformat 474
\begin_document
\begin_header
\textclass sdqthesis
\use_default_options true
\master ../requirements specification.lyx
\maintain_unincluded_children false
\language british
\language_package default
\inputencoding utf8
\fontencoding global
\font_roman default
\font_sans default
\font_typewriter default
\font_math auto
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\spacing single
\use_hyperref false
\papersize default
\use_geometry true
\use_package amsmath 2
\use_package amssymb 1
\use_package cancel 1
\use_package esint 1
\use_package mathdots 1
\use_package mathtools 1
\use_package mhchem 1
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine basic
\cite_engine_type default
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 1
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Standard
\begin_inset Note Note
status open

\begin_layout Plain Layout
This file contains definitions of all terms and abbreviations.
 Note that defining a term here does not automatically include it in the
 document’s glossary.
 It has to actually be referenced somewhere to be included there.
\end_layout

\begin_layout Plain Layout

\emph on
Make sure to define any abbreviation, technical or ambiguous term!
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

% For glossaries documentation, refer to https://en.wikibooks.org/wiki/LaTeX/Gloss
ary#Defining_terms
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

% Example definitions, using most features:
\end_layout

\begin_layout Plain Layout


\backslash
newglossaryentry{naiive}{
\end_layout

\begin_layout Plain Layout

	name=na
\backslash
"{
\backslash
i}ve,
\end_layout

\begin_layout Plain Layout

	description={
\end_layout

\begin_layout Plain Layout

		is a French loanword (adjective, form of naïf) indicating having or showing
 a lack of experience, understanding or sophistication
\end_layout

\begin_layout Plain Layout

	},
\end_layout

\begin_layout Plain Layout

	sort=naive
\end_layout

\begin_layout Plain Layout

} 
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout


\backslash
newglossaryentry{branch}{
\end_layout

\begin_layout Plain Layout

	name={branch construct},
\end_layout

\begin_layout Plain Layout

	description={
\end_layout

\begin_layout Plain Layout

		a construct in the source code only executing none or one of one or multiple
 cases.
 In Java the 
\backslash
lstinline{if}, 
\backslash
lstinline{if}-
\backslash
lstinline{else} and 
\backslash
lstinline{switch}-
\backslash
lstinline{case} constructs are branch constructs.
\end_layout

\begin_layout Plain Layout

	}
\end_layout

\begin_layout Plain Layout

}
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout


\backslash
newglossaryentry{loop construct}{
\end_layout

\begin_layout Plain Layout

	name={loop construct},
\end_layout

\begin_layout Plain Layout

	description={
\end_layout

\begin_layout Plain Layout

		a construct in the source code executing a specific part none, one or
 multiple times.
 In Java the 
\backslash
lstinline{for} loop, the 
\backslash
lstinline{while} loop and the 
\backslash
lstinline{do}-
\backslash
lstinline{while} construct are loops.
\end_layout

\begin_layout Plain Layout

	}
\end_layout

\begin_layout Plain Layout

}
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout


\backslash
newglossaryentry{loop action}{
\end_layout

\begin_layout Plain Layout

	name={
\backslash
lstinline{LoopAction}},
\end_layout

\begin_layout Plain Layout

	description={},
\end_layout

\begin_layout Plain Layout

	sort={LoopAction}
\end_layout

\begin_layout Plain Layout

}
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout


\backslash
newglossaryentry{component}{
\end_layout

\begin_layout Plain Layout

	name={component},
\end_layout

\begin_layout Plain Layout

	description={
\end_layout

\begin_layout Plain Layout

		a component of 
\backslash
gls{component based software}.
\end_layout

\begin_layout Plain Layout

	}
\end_layout

\begin_layout Plain Layout

}
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

%
\backslash
todo{add a short but precise definition of component based software by a
 renowned source}
\end_layout

\begin_layout Plain Layout


\backslash
newglossaryentry{component based software}{
\end_layout

\begin_layout Plain Layout

	name={component base software},
\end_layout

\begin_layout Plain Layout

	description={
\end_layout

\begin_layout Plain Layout

	}
\end_layout

\begin_layout Plain Layout

}
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout


\backslash
newglossaryentry{resource demand}{
\end_layout

\begin_layout Plain Layout

	name={resource demand},
\end_layout

\begin_layout Plain Layout

	description={
\end_layout

\begin_layout Plain Layout

		foobar
\end_layout

\begin_layout Plain Layout

	}
\end_layout

\begin_layout Plain Layout

}
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout


\backslash
newglossaryentry{internal action}{
\end_layout

\begin_layout Plain Layout

	name={internal action},
\end_layout

\begin_layout Plain Layout

	description={
\end_layout

\begin_layout Plain Layout

		sequence of commands a 
\backslash
gls{component} executes without leaving its scope (e.g.
 without calling other 
\backslash
glspl{component})
\end_layout

\begin_layout Plain Layout

	}
\end_layout

\begin_layout Plain Layout

}
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout


\backslash
newacronym{PCM}{PCM}{Palladio Component Model}
\end_layout

\begin_layout Plain Layout

%
\backslash
todo{add a short but precise definition of Palladio Component Model by a
 renowned source}
\end_layout

\begin_layout Plain Layout


\backslash
newglossaryentry{Palladio Component Model}{
\end_layout

\begin_layout Plain Layout

	name={Palladio Component Model},
\end_layout

\begin_layout Plain Layout

	description={}
\end_layout

\begin_layout Plain Layout

}
\end_layout

\begin_layout Plain Layout

		
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout


\backslash
newglossaryentry{software architect}{
\end_layout

\begin_layout Plain Layout

	name={software architect},
\end_layout

\begin_layout Plain Layout

	description={
\end_layout

\begin_layout Plain Layout

		is a software which specifies an 
\backslash
gls{architecture} from existing components and interfaces.
\end_layout

\begin_layout Plain Layout

	}
\end_layout

\begin_layout Plain Layout

}
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout


\backslash
newglossaryentry{SoMoX}{
\end_layout

\begin_layout Plain Layout

	name={SoMoX},
\end_layout

\begin_layout Plain Layout

	description={
\end_layout

\begin_layout Plain Layout

		is a plugin for palladio, which does static code analysis to reengineer
 the architecture as a 
\backslash
gls{PCM} and reconstructs the internal structure of software components
 and calls to other components (SEFF).
\end_layout

\begin_layout Plain Layout

	}
\end_layout

\begin_layout Plain Layout

}
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout


\backslash
newglossaryentry{logical architecture}{
\end_layout

\begin_layout Plain Layout

	name={logical architecture},
\end_layout

\begin_layout Plain Layout

	description={
\end_layout

\begin_layout Plain Layout

		describes a 
\backslash
glsuseri{system} logical partitioning into 
\backslash
glspl{layer}, 
\backslash
glspl{subsystem}, and package, and their communication with each other.
\end_layout

\begin_layout Plain Layout

	}
\end_layout

\begin_layout Plain Layout

}
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout


\backslash
newglossaryentry{deployment architecture}{
\end_layout

\begin_layout Plain Layout

	name={deployment architecture},
\end_layout

\begin_layout Plain Layout

	description={
\end_layout

\begin_layout Plain Layout

		describes in which hardware node each 
\backslash
gls{component} of a 
\backslash
gls{system} is deployed.
\end_layout

\begin_layout Plain Layout

	}
\end_layout

\begin_layout Plain Layout

}
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout


\backslash
newglossaryentry{system}{
\end_layout

\begin_layout Plain Layout

	name={system},
\end_layout

\begin_layout Plain Layout

	user1={system's},
\end_layout

\begin_layout Plain Layout

	description={
\end_layout

\begin_layout Plain Layout

		(usually) reflects the organizational structure that built it.
 (Conway's law)
\end_layout

\begin_layout Plain Layout

	}
\end_layout

\begin_layout Plain Layout

}
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout


\backslash
newglossaryentry{subsystem}{
\end_layout

\begin_layout Plain Layout

	name={subsystem},
\end_layout

\begin_layout Plain Layout

	description={
\end_layout

\begin_layout Plain Layout

		a self-contained 
\backslash
gls{system} within a larger 
\backslash
gls{system}.
\end_layout

\begin_layout Plain Layout

	}
\end_layout

\begin_layout Plain Layout

}
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout


\backslash
newglossaryentry{layer}{
\end_layout

\begin_layout Plain Layout

	name={layer},
\end_layout

\begin_layout Plain Layout

	description={
\end_layout

\begin_layout Plain Layout

		describes conceputal separation in software.
\end_layout

\begin_layout Plain Layout

	}
\end_layout

\begin_layout Plain Layout

}
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout


\backslash
newglossaryentry{tier}{
\end_layout

\begin_layout Plain Layout

	name={tier},
\end_layout

\begin_layout Plain Layout

	description={
\end_layout

\begin_layout Plain Layout

		consists of a server or group of servers.
 Tiers are physically separated from each other.
\end_layout

\begin_layout Plain Layout

	}
\end_layout

\begin_layout Plain Layout

}
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout


\backslash
newglossaryentry{component developer}{
\end_layout

\begin_layout Plain Layout

	name={component developer},
\end_layout

\begin_layout Plain Layout

	description={
\end_layout

\begin_layout Plain Layout

		builds composite 
\backslash
glspl{component}, specifies 
\backslash
glspl{component}, interfaces, and data types, and specifies data types.
 It creates service effect specifications, stores modelling and implementation
 artecfacts in repositories, and implements, tests, and maintains 
\backslash
glspl{component}.
\end_layout

\begin_layout Plain Layout

	}
\end_layout

\begin_layout Plain Layout

}
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout


\backslash
newacronym{SEFF}{SEFF}{Service Effect Specification}
\end_layout

\begin_layout Plain Layout


\backslash
newglossaryentry{Service Effect Specification}{
\end_layout

\begin_layout Plain Layout

	name={Palladio Component Model},
\end_layout

\begin_layout Plain Layout

	description={
\end_layout

\begin_layout Plain Layout

		describes the inner-component behaviour of a component operation on a
 highly abstract level by specifying the relationship between provided and
 required services of a component.
  
\end_layout

\begin_layout Plain Layout

}
\end_layout

\begin_layout Plain Layout

}
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout


\backslash
newglossaryentry{system deployer}{
\end_layout

\begin_layout Plain Layout

	name={system deployer},
\end_layout

\begin_layout Plain Layout

	description={
\end_layout

\begin_layout Plain Layout

		models the resource environments and allocations of components to resources.
 It also sets up the resource environments, deploys components onto resources,
 and maintains the running system.
\end_layout

\begin_layout Plain Layout

	}
\end_layout

\begin_layout Plain Layout

}
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

		
\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\end_body
\end_document
