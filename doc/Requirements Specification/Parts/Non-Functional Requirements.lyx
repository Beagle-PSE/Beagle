#LyX 2.1 created this file. For more info see http://www.lyx.org/
\lyxformat 474
\begin_document
\begin_header
\textclass sdqthesis
\use_default_options true
\master ../Requirements Specification.lyx
\maintain_unincluded_children false
\language british
\language_package default
\inputencoding utf8
\fontencoding global
\font_roman default
\font_sans default
\font_typewriter default
\font_math auto
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\spacing single
\use_hyperref false
\papersize default
\use_geometry true
\use_package amsmath 2
\use_package amssymb 1
\use_package cancel 1
\use_package esint 1
\use_package mathdots 1
\use_package mathtools 1
\use_package mhchem 1
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine basic
\cite_engine_type default
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 1
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Chapter
Non Functional Requirements
\end_layout

\begin_layout Standard
\begin_inset Note Note
status open

\begin_layout Plain Layout
Non Functional Requirements are all requirements that describe some aspect
 of the software’s quality.
\end_layout

\begin_layout Plain Layout
Requirements shall be atomic (as in “cannot be split”), precise (as in “not
 ambiguous”, use definitions and references increase precision), measurable,
 testable and verifiable.
\end_layout

\begin_layout Plain Layout
They shall be grouped by topics using sections and subsections.
\end_layout

\begin_layout Plain Layout
Please make sure to apply the same logic as in the purpose section to split
 between mandatory and optional.
\end_layout

\begin_layout Plain Layout
Reference notation for mandatory requirements is /Q#/
\end_layout

\begin_layout Plain Layout
Reference notation for nice to have requirements is /OQ#/
\end_layout

\end_inset


\end_layout

\begin_layout Section
Dependencies
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000
\begin_inset CommandInset label
LatexCommand label
name "/Q10/"

\end_inset

 In order to use Beagle, the user is not required to have any software installed
 but Java, Eclipse, 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
gls{Palladio}
\end_layout

\end_inset

 and a 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
gls{measurement software}
\end_layout

\end_inset

 supported by Beagle.
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000
\begin_inset CommandInset label
LatexCommand label
name "/Q20/"

\end_inset

 Beagle does not depend on any specific 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
gls{measurement software}
\end_layout

\end_inset

.
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000
\begin_inset CommandInset label
LatexCommand label
name "/Q30/"

\end_inset

 Beagle does not require its input artifacts to be generated by a specific
 software.
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000
\begin_inset VSpace defskip
\end_inset


\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000
\begin_inset CommandInset label
LatexCommand label
name "/OQ10/"

\end_inset

 Beagle can be used on every combination of operating system and hardware
 platform Eclipse and 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
gls{Palladio}
\end_layout

\end_inset

 runs on.
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000
\begin_inset CommandInset label
LatexCommand label
name "/OQ20/"

\end_inset

 The measurements run without user interaction.
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000
\begin_inset CommandInset label
LatexCommand label
name "/OQ30/"

\end_inset

 The measurements also shall run over the network e.g.
 on a Server.
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000
\begin_inset CommandInset label
LatexCommand label
name "/OQ40/"

\end_inset

 During the measurements Beagle saves the results of measurement to a hard
 disk.
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000
\begin_inset CommandInset label
LatexCommand label
name "/OQ50/"

\end_inset

 The user has the possibility to pause the measurements.
 As well the user can continue a measurement from save.
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000
\begin_inset CommandInset label
LatexCommand label
name "/OQ60/"

\end_inset

 If it is requested, Beagle shuts down the PC after it finished.
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000
\begin_inset CommandInset label
LatexCommand label
name "/OQ70/"

\end_inset

 Beagle report the progress of measurements in a progress bar.
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000
\begin_inset CommandInset label
LatexCommand label
name "/OQ80/"

\end_inset

 Beagle is robust against software errors e.g.
 exceptions.
\end_layout

\begin_layout Section
User Interface and Experience
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000
\begin_inset CommandInset label
LatexCommand label
name "/Q100/"

\end_inset

 Beagle is implemented as an Eclipse plugin.
 As both 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
gls{Palladio}
\end_layout

\end_inset

 and its extensions are Eclipse plugins, this ensures good usability for
 users.
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000
\begin_inset CommandInset label
LatexCommand label
name "/Q110/"

\end_inset

 Beagle can be controlled by context sensitive menus in Eclipse.
 
\begin_inset Note Note
status open

\begin_layout Plain Layout
More precise?!
\end_layout

\end_inset


\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000
\begin_inset VSpace defskip
\end_inset


\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000
\begin_inset CommandInset label
LatexCommand label
name "/OQ100/"

\end_inset

 Beagle is integrated in 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
gls{SoMoX}
\end_layout

\end_inset

, such that it is automatically executed after 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
gls{SoMoX}
\end_layout

\end_inset

 has finished.
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000
\begin_inset CommandInset label
LatexCommand label
name "/OQ110/"

\end_inset

 Beagle can obtain its input artifacts from 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
gls{SoMoX}
\end_layout

\end_inset

, such that the user does not need to provide further information after
 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
gls{SoMoX}
\end_layout

\end_inset

 was started.
 If Beagle requires more information than 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
gls{SoMoX}
\end_layout

\end_inset

 provides, the user can already submit it while configuring 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
gls{SoMoX}
\end_layout

\end_inset

.
\end_layout

\end_body
\end_document
