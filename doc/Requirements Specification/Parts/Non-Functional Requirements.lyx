#LyX 2.1 created this file. For more info see http://www.lyx.org/
\lyxformat 474
\begin_document
\begin_header
\textclass sdqthesis
\use_default_options true
\master ../Requirements Specification.lyx
\maintain_unincluded_children false
\language british
\language_package default
\inputencoding utf8
\fontencoding global
\font_roman default
\font_sans default
\font_typewriter default
\font_math auto
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\spacing single
\use_hyperref false
\papersize default
\use_geometry true
\use_package amsmath 2
\use_package amssymb 1
\use_package cancel 1
\use_package esint 1
\use_package mathdots 1
\use_package mathtools 1
\use_package mhchem 1
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine basic
\cite_engine_type default
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 1
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Chapter
Non-Functional Requirements
\end_layout

\begin_layout Standard
\begin_inset Note Note
status open

\begin_layout Plain Layout
Non Functional Requirements are all requirements that describe some aspect
 of the software’s quality.
\end_layout

\begin_layout Plain Layout
Requirements shall be atomic (as in “cannot be split”), precise (as in “not
 ambiguous”, use definitions and references increase precision), measurable,
 testable and verifiable.
\end_layout

\begin_layout Plain Layout
They shall be grouped by topics using sections and subsections.
\end_layout

\begin_layout Plain Layout
Please make sure to apply the same logic as in the purpose section to split
 between mandatory and optional.
\end_layout

\begin_layout Plain Layout
Reference notation for mandatory requirements is /Q#/
\end_layout

\begin_layout Plain Layout
Reference notation for nice to have requirements is /OQ#/
\end_layout

\end_inset

In order to be as independent as possible and to provide good 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
gls{QoS}
\end_layout

\end_inset

 and user experience, 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
gls{Beagle}
\end_layout

\end_inset

 must fulfil the following requirements:
\end_layout

\begin_layout Section
Dependencies
\end_layout

\begin_layout Paragraph
Mandatory
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000
\begin_inset CommandInset label
LatexCommand label
name "/Q10/"

\end_inset

 In order to use 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
gls{Beagle}
\end_layout

\end_inset

, the user is not required to have any software but Java, Eclipse, 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
gls{Palladio}
\end_layout

\end_inset

, and a 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
gls{measurement software}
\end_layout

\end_inset

 supported by 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
gls{Beagle}
\end_layout

\end_inset

 installed.
 
\begin_inset Note Note
status open

\begin_layout Plain Layout
Tested by 
\begin_inset CommandInset ref
LatexCommand ref
reference "/T200/"

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000
\begin_inset CommandInset label
LatexCommand label
name "/Q20/"

\end_inset

 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
gls{Beagle}
\end_layout

\end_inset

 does not depend on any specific 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
gls{measurement software}
\end_layout

\end_inset

.
 
\begin_inset Note Note
status open

\begin_layout Plain Layout
Tested by 
\begin_inset CommandInset ref
LatexCommand ref
reference "/T210/"

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000
\begin_inset CommandInset label
LatexCommand label
name "/Q30/"

\end_inset

 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
gls{Beagle}
\end_layout

\end_inset

 does not require its input artefacts to be generated by any specific software.
 
\begin_inset Note Note
status open

\begin_layout Plain Layout
Tested by mocked input
\end_layout

\end_inset


\end_layout

\begin_layout Paragraph
Optional
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000
\begin_inset CommandInset label
LatexCommand label
name "/OQ10/"

\end_inset

 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
gls{Beagle}
\end_layout

\end_inset

 can be used on every combination of operating system and hardware platform
 Eclipse and 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
gls{Palladio}
\end_layout

\end_inset

 run on.
 
\begin_inset Note Note
status open

\begin_layout Plain Layout
Tested by 
\begin_inset CommandInset ref
LatexCommand ref
reference "/OT200/"

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000
\begin_inset CommandInset label
LatexCommand label
name "/OQ20/"

\end_inset

 No user interaction is required while 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
gls{Beagle}
\end_layout

\end_inset

 conducts measurements.
 
\begin_inset Note Note
status open

\begin_layout Plain Layout
Tested by automatic tests
\end_layout

\end_inset


\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000
\begin_inset CommandInset label
LatexCommand label
name "/OQ30/"

\end_inset

 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
gls{Beagle}
\end_layout

\end_inset

 shall handle any error caused by the measured software (uncaught exceptions,
 uncaught errors, calls to 
\begin_inset listings
inline true
status open

\begin_layout Plain Layout

System#exit
\end_layout

\end_inset

, or other unexpected termination of the software’s process(es)).
 This means that neither will 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
gls{Beagle}
\end_layout

\end_inset

 crash because of such errors nor will other measurements be affected by
 them.
 
\begin_inset Note Note
status open

\begin_layout Plain Layout
Tested by 
\begin_inset CommandInset ref
LatexCommand ref
reference "/OT20/"

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000
\begin_inset CommandInset label
LatexCommand label
name "/OQ40/"

\end_inset

 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
gls{Beagle}
\end_layout

\end_inset

 does not modify the provided source code files.
 
\begin_inset Note Note
status open

\begin_layout Plain Layout
Tested by 
\begin_inset CommandInset ref
LatexCommand ref
reference "/OT100/"

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Section
User Interface and Experience
\end_layout

\begin_layout Paragraph
Mandatory
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000
\begin_inset CommandInset label
LatexCommand label
name "/Q100/"

\end_inset

 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
gls{Beagle}
\end_layout

\end_inset

 is implemented as an Eclipse plug-in.
 Since both 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
gls{Palladio}
\end_layout

\end_inset

 and its extensions are Eclipse plug-ins, this ensures good usability.
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000
\begin_inset CommandInset label
LatexCommand label
name "/Q110/"

\end_inset

 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
gls{Beagle}
\end_layout

\end_inset

 uses native Eclipse features for its 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
gls{GUI}
\end_layout

\end_inset

.
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000
\begin_inset CommandInset label
LatexCommand label
name "/Q120/"

\end_inset

 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
gls{Beagle}
\end_layout

\end_inset

 can be controlled by context-sensitive menus in Eclipse.
 
\begin_inset Note Note
status open

\begin_layout Plain Layout
More precise?!
\end_layout

\end_inset


\end_layout

\begin_layout Paragraph
Optional
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000
\begin_inset CommandInset label
LatexCommand label
name "/OQ100/"

\end_inset

 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
gls{Beagle}
\end_layout

\end_inset

 is integrated into 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
gls{SoMoX}
\end_layout

\end_inset

 to automatically be executed after 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
gls{SoMoX}
\end_layout

\end_inset

 has finished.
 
\begin_inset Note Note
status open

\begin_layout Plain Layout
Tested by 
\begin_inset CommandInset ref
LatexCommand ref
reference "/OT210/"

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000
\begin_inset CommandInset label
LatexCommand label
name "/OQ110/"

\end_inset

 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
gls{Beagle}
\end_layout

\end_inset

 can obtain its input artefacts from 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
gls{SoMoX}
\end_layout

\end_inset

 so users do not need to provide additional information after 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
gls{SoMoX}
\end_layout

\end_inset

 has been started.
 If 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
gls{Beagle}
\end_layout

\end_inset

 requires more information than 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
gls{SoMoX}
\end_layout

\end_inset

 provides, users can already submit it while configuring 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
gls{SoMoX}
\end_layout

\end_inset

.
 
\begin_inset Note Note
status open

\begin_layout Plain Layout
Tested by 
\begin_inset CommandInset ref
LatexCommand ref
reference "/OT210/"

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000
\begin_inset CommandInset label
LatexCommand label
name "/OQ120/"

\end_inset

 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
gls{Beagle}
\end_layout

\end_inset

 reports its progress to the user.
\end_layout

\begin_layout Subsection
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
glsentryshort{GUI}
\end_layout

\end_inset

 Model
\end_layout

\begin_layout Standard
Users have several options to launch the analysis:
\end_layout

\begin_layout Enumerate
To analyse the entire project, there is an entry 
\begin_inset Quotes eld
\end_inset

Analyse with 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
gls{Beagle}
\end_layout

\end_inset


\begin_inset Quotes erd
\end_inset

 in the context menu of the 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
lstinline{.repository}
\end_layout

\end_inset

 or 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
lstinline{.repository_diagram}
\end_layout

\end_inset

 file in Eclipse.
\end_layout

\begin_layout Enumerate
To analyse a single 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
gls{component}
\end_layout

\end_inset

, there is an entry 
\begin_inset Quotes eld
\end_inset

Analyse with 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
gls{Beagle}
\end_layout

\end_inset


\begin_inset Quotes erd
\end_inset

 in the context menu of each 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
gls{component}
\end_layout

\end_inset

 in the repository diagram.
\end_layout

\begin_layout Enumerate
To analyse a single 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
gls{internal action}
\end_layout

\end_inset

, there is an entry 
\begin_inset Quotes eld
\end_inset

Analyse with 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
gls{Beagle}
\end_layout

\end_inset


\begin_inset Quotes erd
\end_inset

 in the context menu of each 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
gls{internal action}
\end_layout

\end_inset

 in the 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
gls{SEFF}
\end_layout

\end_inset

 diagram.
\end_layout

\begin_deeper
\begin_layout Standard
If an analysis with 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
gls{Beagle}
\end_layout

\end_inset

 is not possible in option 1, 2, or 3, the context menu entry will be shown
 greyed out and a description stating why the analysis is not possible is
 shown when a user tries to start it.
\end_layout

\end_deeper
\begin_layout Enumerate
If 
\begin_inset CommandInset ref
LatexCommand ref
reference "/OQ100/"

\end_inset

 is implemented, users have the option to automatically start the analysis
 with 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
gls{Beagle}
\end_layout

\end_inset

 after 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
gls{SoMoX}
\end_layout

\end_inset

 has finished when launching the latter.
\end_layout

\begin_layout Standard
When users launch the analysis, they are presented a window where they can
 adapt certain 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
gls{Beagle}
\end_layout

\end_inset

 settings:
\end_layout

\begin_layout Enumerate
If 
\begin_inset CommandInset ref
LatexCommand ref
reference "/F60/"

\end_inset

 is implemented, users may adapt the default timeout.
\end_layout

\begin_layout Enumerate
If 
\begin_inset CommandInset ref
LatexCommand ref
reference "/OF120/"

\end_inset

 is implemented, the connection to the measurement machine can be set up.
\end_layout

\begin_layout Enumerate
If 
\begin_inset CommandInset ref
LatexCommand ref
reference "/OF60/"

\end_inset

 is implemented, users may choose to additionally benchmark their hardware
 system.
\end_layout

\begin_layout Standard
If 
\begin_inset CommandInset ref
LatexCommand ref
reference "/OF60/"

\end_inset

 is implemented, 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
gls{Beagle}
\end_layout

\end_inset

 also provides a button for benchmarking the hardware without running any
 analysis.
\end_layout

\begin_layout Standard
\begin_inset VSpace defskip
\end_inset


\end_layout

\begin_layout Standard
When the analysis is running, a window reporting progress is displayed.
\end_layout

\begin_layout Standard
If 
\begin_inset CommandInset ref
LatexCommand ref
reference "/OF130/"

\end_inset

 is implemented, there is a button for pausing the analysis.
 If it is paused, this button changes to a resume button.
 If 
\begin_inset CommandInset ref
LatexCommand ref
reference "/OF140/"

\end_inset

 is implemented and the users choose to close Eclipse, a dialogue allowing
 them to resume the analysis appears every time they launch Eclipse.
 This dialogue also offers the options to disable the dialogue for the future
 and to abort the analysis and drop the data collected to this point.
 Additionally, each context menu with the entry 
\begin_inset Quotes eld
\end_inset

Analyse with 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
gls{Beagle}
\end_layout

\end_inset


\begin_inset Quotes erd
\end_inset

 also has another entry called 
\begin_inset Quotes eld
\end_inset

Resume Latest 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
gls{Beagle}
\end_layout

\end_inset

 Analysis
\begin_inset Quotes erd
\end_inset

 allowing the user to resume the analysis.
\end_layout

\begin_layout Standard
In the progress window, there is a button to abort the analysis.
\end_layout

\end_body
\end_document
