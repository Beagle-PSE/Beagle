#LyX 2.1 created this file. For more info see http://www.lyx.org/
\lyxformat 474
\begin_document
\begin_header
\textclass sdqthesis
\use_default_options true
\master ../Requirements Specification.lyx
\maintain_unincluded_children false
\language british
\language_package default
\inputencoding utf8
\fontencoding global
\font_roman default
\font_sans default
\font_typewriter default
\font_math auto
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\spacing single
\use_hyperref false
\papersize default
\use_geometry true
\use_package amsmath 2
\use_package amssymb 1
\use_package cancel 1
\use_package esint 1
\use_package mathdots 1
\use_package mathtools 1
\use_package mhchem 1
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine basic
\cite_engine_type default
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 1
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Chapter
Application
\end_layout

\begin_layout Section
Application Field
\end_layout

\begin_layout Standard
\begin_inset Note Note
status open

\begin_layout Plain Layout
Describes where the software is going to be used.
 This includes typical use cases.
\end_layout

\begin_layout Plain Layout
Reference notation is /A#/
\end_layout

\end_inset


\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000
\begin_inset CommandInset label
LatexCommand label
name "/A10/"

\end_inset

 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
gls{Beagle}
\end_layout

\end_inset

 can be used to re-engineer source code.
 To start using 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
Gls{Palladio}
\end_layout

\end_inset

 for an existing software, 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
gls{Beagle}
\end_layout

\end_inset

 can be combined with a tool for static code analysis like 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
gls{SoMoX}
\end_layout

\end_inset

.
 This way, the software can quickly be analysed with 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
gls{Palladio}
\end_layout

\end_inset

.
 Modelling an existing software is such a time-consuming task that automatic
 modelling is a valuable feature which may be crucial to have for developers
 who start using 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
gls{Palladio}
\end_layout

\end_inset

.
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename UML Diagrams/Reengineering.uxf.pdf
	width 90text%
	height 100pheight%
	keepAspectRatio

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
\begin_inset Argument 1
status open

\begin_layout Plain Layout
UML Activity diagram for 
\begin_inset CommandInset ref
LatexCommand ref
reference "/A10/"

\end_inset


\end_layout

\end_inset

A typical workflow when using 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
gls{Beagle}
\end_layout

\end_inset

 to re-engineer existing source code (
\begin_inset CommandInset ref
LatexCommand ref
reference "/A10/"

\end_inset

).
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000
\begin_inset CommandInset label
LatexCommand label
name "/A20/"

\end_inset

 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
gls{Beagle}
\end_layout

\end_inset

 can be used for software development.
 Early implementations of 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
glspl{component}
\end_layout

\end_inset

 modelled in the 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
gls{PCM}
\end_layout

\end_inset

 can be analysed with 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
gls{Beagle}
\end_layout

\end_inset

 in order to predict their performance in interaction with the 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
glsuserv{system}
\end_layout

\end_inset

.
 This leads to fast detection of arising problems (like implementation errors
 or unrealistic modelling in the 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
gls{PCM}
\end_layout

\end_inset

), which can then be fixed early on.
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename UML Diagrams/Development.uxf.pdf
	width 90text%
	height 100pheight%
	keepAspectRatio

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
\begin_inset Argument 1
status open

\begin_layout Plain Layout
UML Activity diagram for 
\begin_inset CommandInset ref
LatexCommand ref
reference "/A20/"

\end_inset


\end_layout

\end_inset

A typical workflow when using 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
gls{Beagle}
\end_layout

\end_inset

 during software development (
\begin_inset CommandInset ref
LatexCommand ref
reference "/A20/"

\end_inset

).
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000
\begin_inset CommandInset label
LatexCommand label
name "/A30/"

\end_inset

 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
gls{Beagle}
\end_layout

\end_inset

 may be used for prototyping.
 Different implementations of a 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
gls{component}
\end_layout

\end_inset

 modelled in the 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
gls{PCM}
\end_layout

\end_inset

 may be analysed with 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
gls{Beagle}
\end_layout

\end_inset

 to determine their 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
glspl{resource demand}
\end_layout

\end_inset

.
 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
Gls{Palladio}
\end_layout

\end_inset

 can then be used to simulate the software system's performance with each
 implementation.
 As performance is multi-dimensional, this can lead to more precise information
 about the different implementation's effects on the system's runtime.
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename UML Diagrams/Prototyp.uxf.pdf
	width 90text%
	height 100pheight%
	keepAspectRatio

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
\begin_inset Argument 1
status open

\begin_layout Plain Layout
UML Activity diagram for 
\begin_inset CommandInset ref
LatexCommand ref
reference "/A30/"

\end_inset


\end_layout

\end_inset

A typical workflow when using 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
gls{Beagle}
\end_layout

\end_inset

 for prototyping (
\begin_inset CommandInset ref
LatexCommand ref
reference "/A30/"

\end_inset

).
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000
\begin_inset CommandInset label
LatexCommand label
name "/A40/"

\end_inset

 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
gls{Beagle}
\end_layout

\end_inset

 can be used to verify software's design and implementation.
 After developing the software with 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
gls{Palladio}
\end_layout

\end_inset

 and implementing it, 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
gls{Beagle}
\end_layout

\end_inset

 can analyse its 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
glspl{resource demand}
\end_layout

\end_inset

 which can then be compared to the predicted ones.
 With this approach, differences and problems in the implementation can
 be detected and resolved more easily.
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename UML Diagrams/Validation.uxf.pdf
	width 90text%
	height 100pheight%
	keepAspectRatio

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
\begin_inset Argument 1
status open

\begin_layout Plain Layout
UML Activity diagram for 
\begin_inset CommandInset ref
LatexCommand ref
reference "/A40/"

\end_inset


\end_layout

\end_inset

A typical workflow when using 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
gls{Beagle}
\end_layout

\end_inset

 to verify the implementation (
\begin_inset CommandInset ref
LatexCommand ref
reference "/A40/"

\end_inset

).
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Section
Target Group
\end_layout

\begin_layout Standard
\begin_inset Note Note
status open

\begin_layout Plain Layout
Defines the software's target groups.
 They will typically be logically derived from the above part.
\end_layout

\begin_layout Plain Layout
Reference notation is /G#/
\end_layout

\end_inset


\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000
\begin_inset CommandInset label
LatexCommand label
name "/G10/"

\end_inset

 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
Glspl{software architect}
\end_layout

\end_inset

 can use 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
gls{Beagle}
\end_layout

\end_inset

 predominantly for 
\begin_inset CommandInset ref
LatexCommand ref
reference "/A10/"

\end_inset

 and 
\begin_inset CommandInset ref
LatexCommand ref
reference "/A40/"

\end_inset

.
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000
\begin_inset CommandInset label
LatexCommand label
name "/G20/"

\end_inset

 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
Glspl{system deployer}
\end_layout

\end_inset

 can use 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
gls{Beagle}
\end_layout

\end_inset

 predominantly for 
\begin_inset CommandInset ref
LatexCommand ref
reference "/A40/"

\end_inset

.
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000
\begin_inset CommandInset label
LatexCommand label
name "/G30/"

\end_inset

 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
Glspl{component developer}
\end_layout

\end_inset

 can use 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
gls{Beagle}
\end_layout

\end_inset

 predominantly for 
\begin_inset CommandInset ref
LatexCommand ref
reference "/A20/"

\end_inset

 and 
\begin_inset CommandInset ref
LatexCommand ref
reference "/A30/"

\end_inset

.
\end_layout

\end_body
\end_document
