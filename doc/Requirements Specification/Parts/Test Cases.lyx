#LyX 2.1 created this file. For more info see http://www.lyx.org/
\lyxformat 474
\begin_document
\begin_header
\textclass sdqthesis
\use_default_options true
\master ../Requirements Specification.lyx
\maintain_unincluded_children false
\language british
\language_package default
\inputencoding utf8
\fontencoding global
\font_roman default
\font_sans default
\font_typewriter default
\font_math auto
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\spacing single
\use_hyperref false
\papersize default
\use_geometry true
\use_package amsmath 2
\use_package amssymb 1
\use_package cancel 1
\use_package esint 1
\use_package mathdots 1
\use_package mathtools 1
\use_package mhchem 1
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine basic
\cite_engine_type default
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 1
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Chapter
Test Cases
\end_layout

\begin_layout Standard
As Beagle has to work with the above defined interfaces it has to be tested
 in complete.
 However, this could result into testing the other softwares, which is not
 what should be done, or even worse it could result in not detecting errors
 and failures as they are compensated by other software.
 On account of this two types of tests are needed: one testing the whole
 system with its dependencies and another with parameters put in at the
 interfaces and therefore only testing Beagle itself.
\end_layout

\begin_layout Standard
\begin_inset Note Note
status open

\begin_layout Plain Layout
Global test cases.
 This chapter specifies the acceptance criteria.
 As it was preceded by the requirements specification chapters, this part
 should define ways to assert the requirements stated above.
 
\end_layout

\begin_layout Plain Layout
This chapter is an essential part in making the requirements verifiable.
 It will serve as a base for product acceptance and will be useful to track
 progress in the implementation phase.
\end_layout

\begin_layout Plain Layout
Make sure to stay at the level of acceptance testing.
 This chapter should never define unit or integration tests.
 (Which don’t make sense anyway, as we don’t have a design yet).
\end_layout

\begin_layout Plain Layout
Reference notation is /T#/.
 /OT#/ indicates test for optional requirements.
\end_layout

\end_inset


\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000
\begin_inset CommandInset label
LatexCommand label
name "/T10/"

\end_inset

 Smoke testing.
 First of all, the software has to be running, otherwise there is nothing
 to test.
 On account of this the first test is a simple run-through.
 For a valid input this has to work without exceptions and the software
 has to terminate.
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000
\begin_inset CommandInset label
LatexCommand label
name "/T20/"

\end_inset

 For a correct result in the 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
gls{PCM}
\end_layout

\end_inset

 it is essential to to measure at the correct points.
 Therefore a test has to assert that Beagle discovers all sections needed
 and that they are correct.
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000
\begin_inset CommandInset label
LatexCommand label
name "/T30/"

\end_inset

 There has to be a test which asserts that Beagle works for a system with
 only the software specified in 
\begin_inset CommandInset ref
LatexCommand ref
reference "/Q10/"

\end_inset

.
 A new system has to be set up with only these software applications and
 Beagle has to be tested on it.
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000
\begin_inset CommandInset label
LatexCommand label
name "/T40/"

\end_inset

 All interfaces with other software have to be tested.
 Asserting that transferring of data between interfaces and Beagle works
 correctly in both ways.
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000
\begin_inset CommandInset label
LatexCommand label
name "/T50/"

\end_inset

 Beagle has to work with different software through the 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
gls{CTA}
\end_layout

\end_inset

.
 Therefore it is necessary to test Beagle with 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
gls{Kieker}
\end_layout

\end_inset

 and other 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
gls{measurement software}
\end_layout

\end_inset

.
 Tests 
\begin_inset CommandInset ref
LatexCommand ref
reference "/F40/"

\end_inset

 and 
\begin_inset CommandInset ref
LatexCommand ref
reference "/Q20/"

\end_inset

)
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000
\begin_inset CommandInset label
LatexCommand label
name "/T60/"

\end_inset

 As Beagle only changes the 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
gls{PCM}
\end_layout

\end_inset

 the source code files must not be changed (
\begin_inset CommandInset ref
LatexCommand ref
reference "/F50/"

\end_inset

).
 There have to be test to assert that.
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000
\begin_inset CommandInset label
LatexCommand label
name "/T70/"

\end_inset

 Assert that in 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
gls{PCM}
\end_layout

\end_inset

 all 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
glspl{resource demand}
\end_layout

\end_inset

 are added and nothing else is changed.
 This includes to assure that the 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
gls{PCM}
\end_layout

\end_inset

 is valid.
 Tests 
\begin_inset CommandInset ref
LatexCommand ref
reference "/C10/"

\end_inset

, 
\begin_inset CommandInset ref
LatexCommand ref
reference "/C20/"

\end_inset

, 
\begin_inset CommandInset ref
LatexCommand ref
reference "/F200/"

\end_inset

, 
\begin_inset CommandInset ref
LatexCommand ref
reference "/F210/"

\end_inset

, 
\begin_inset CommandInset ref
LatexCommand ref
reference "/F230/"

\end_inset

 and 
\begin_inset CommandInset ref
LatexCommand ref
reference "/F240/"

\end_inset

.
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000
\begin_inset VSpace defskip
\end_inset


\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000
\begin_inset CommandInset label
LatexCommand label
name "/OT10/"

\end_inset

 Test with different operating systems and hardware.
 Tests 
\begin_inset CommandInset ref
LatexCommand ref
reference "/OQ10/"

\end_inset

.
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000
\begin_inset CommandInset label
LatexCommand label
name "/OT20/"

\end_inset

 Assert that Beagle detects invalid input and does not crash but responds
 to it in a acceptable way.
\end_layout

\end_body
\end_document
