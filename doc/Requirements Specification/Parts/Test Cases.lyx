#LyX 2.1 created this file. For more info see http://www.lyx.org/
\lyxformat 474
\begin_document
\begin_header
\textclass sdqthesis
\use_default_options true
\master ../Requirements Specification.lyx
\maintain_unincluded_children false
\language british
\language_package default
\inputencoding utf8
\fontencoding global
\font_roman default
\font_sans default
\font_typewriter default
\font_math auto
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\spacing single
\use_hyperref false
\papersize default
\use_geometry true
\use_package amsmath 2
\use_package amssymb 1
\use_package cancel 1
\use_package esint 1
\use_package mathdots 1
\use_package mathtools 1
\use_package mhchem 1
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine basic
\cite_engine_type default
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 1
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Chapter
Test Cases
\end_layout

\begin_layout Standard
As 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
gls{Beagle}
\end_layout

\end_inset

 has to work with the above defined interfaces it has to be tested in complete.
 However, this could result into testing the other software, which is not
 what should be done, or even worse it could result in not detecting errors
 and failures as they are compensated by other software.
 On account of this two types of tests are needed: one testing the whole
 system with its dependencies and another with parameters put in at the
 interfaces and therefore only testing 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
gls{Beagle}
\end_layout

\end_inset

 itself.
\end_layout

\begin_layout Standard
\begin_inset Note Note
status open

\begin_layout Plain Layout
Global test cases.
 This chapter specifies the acceptance criteria.
 As it was preceded by the requirements specification chapters, this part
 should define ways to assert the requirements stated above.
 
\end_layout

\begin_layout Plain Layout
This chapter is an essential part in making the requirements verifiable.
 It will serve as a base for product acceptance and will be useful to track
 progress in the implementation phase.
\end_layout

\begin_layout Plain Layout
Make sure to stay at the level of acceptance testing.
 This chapter should never define unit or integration tests.
 (Which don’t make sense anyway, as we don’t have a design yet).
\end_layout

\begin_layout Plain Layout
Reference notation is /T#/.
 /OT#/ indicates test for optional requirements.
\end_layout

\end_inset


\end_layout

\begin_layout Paragraph
Mandatory
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000
\begin_inset CommandInset label
LatexCommand label
name "/T10/"

\end_inset

 Assert that software is starting, running and terminating by a simple run-throu
gh.
 For a valid input this has to work without exceptions and the software
 has to terminate.
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000
\begin_inset CommandInset label
LatexCommand label
name "/T20/"

\end_inset

 Assert that 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
gls{Beagle}
\end_layout

\end_inset

 discovers all sections needed for measurement and that they are correct.
 For a correct result in the 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
gls{PCM}
\end_layout

\end_inset

 it is essential to to measure at the correct points.
 A part of this can be realised by checking if all code sections (of the
 measured part) were measured.
 Tests 
\begin_inset CommandInset ref
LatexCommand ref
reference "/F10/"

\end_inset

.
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000
\begin_inset CommandInset label
LatexCommand label
name "/T30/"

\end_inset

 Assert that 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
gls{Beagle}
\end_layout

\end_inset

 works for a system with only the software specified in 
\begin_inset CommandInset ref
LatexCommand ref
reference "/Q10/"

\end_inset

.
 A new system has to be set up with only these software applications and
 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
gls{Beagle}
\end_layout

\end_inset

 has to be tested on it.
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000
\begin_inset CommandInset label
LatexCommand label
name "/T40/"

\end_inset

 Assert that transferring data between interfaces and 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
gls{Beagle}
\end_layout

\end_inset

 works correctly in both directions.
 All interfaces with other software have to be tested.
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000
\begin_inset CommandInset label
LatexCommand label
name "/T50/"

\end_inset

 Assert that in 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
gls{PCM}
\end_layout

\end_inset

 all measured 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
glspl{resource demand}
\end_layout

\end_inset

 are added and nothing else is changed.
 This includes to assure that the 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
gls{PCM}
\end_layout

\end_inset

 is valid.
 Tests 
\begin_inset CommandInset ref
LatexCommand ref
reference "/C10/"

\end_inset

, 
\begin_inset CommandInset ref
LatexCommand ref
reference "/C20/"

\end_inset

, 
\begin_inset CommandInset ref
LatexCommand ref
reference "/F200/"

\end_inset

, 
\begin_inset CommandInset ref
LatexCommand ref
reference "/F210/"

\end_inset

, 
\begin_inset CommandInset ref
LatexCommand ref
reference "/F230/"

\end_inset

 and 
\begin_inset CommandInset ref
LatexCommand ref
reference "/F240/"

\end_inset

.
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000
\begin_inset CommandInset label
LatexCommand label
name "/T60/"

\end_inset

 Assert that 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
gls{Beagle}
\end_layout

\end_inset

 measures the sections with measurement software through the 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
gls{CTA}
\end_layout

\end_inset

.
 Tests 
\begin_inset CommandInset ref
LatexCommand ref
reference "/F20/"

\end_inset

, 
\begin_inset CommandInset ref
LatexCommand ref
reference "/F30/"

\end_inset

 and 
\begin_inset CommandInset ref
LatexCommand ref
reference "/F40/"

\end_inset

.
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000
\begin_inset CommandInset label
LatexCommand label
name "/T70/"

\end_inset

 Assert that 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
gls{Beagle}
\end_layout

\end_inset

 stops measurements after timeout.
 Therefore run a measurement for software (which e.g.
 does not terminate) and define a timeout.
 Additional assert that this timeout can be turned off.
 Tests 
\begin_inset CommandInset ref
LatexCommand ref
reference "/F50/"

\end_inset

 and 
\begin_inset CommandInset ref
LatexCommand ref
reference "/F60/"

\end_inset

.
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000
\begin_inset CommandInset label
LatexCommand label
name "/T80/"

\end_inset

 Assert that results are stored in the 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
gls{PCM}
\end_layout

\end_inset

 by a manual test: run a measurement and check the 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
gls{PCM}
\end_layout

\end_inset

 afterwards.
 Tests 
\begin_inset CommandInset ref
LatexCommand ref
reference "/F200/"

\end_inset

.
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000
\begin_inset CommandInset label
LatexCommand label
name "/T90/"

\end_inset

 Assert that the 
\begin_inset CommandInset ref
LatexCommand ref
reference "result PCM"

\end_inset

 can be read by a 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
gls{Palladio}
\end_layout

\end_inset

 installation without 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
gls{Beagle}
\end_layout

\end_inset

 by opening it on such a system.
 Tests 
\begin_inset CommandInset ref
LatexCommand ref
reference "/F220/"

\end_inset

.
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000
\begin_inset CommandInset label
LatexCommand label
name "/T100/"

\end_inset

 Assert that all the 
\begin_inset CommandInset ref
LatexCommand ref
reference "result PCM"

\end_inset

 contains all gained information (see 
\begin_inset CommandInset ref
LatexCommand ref
reference "/F230/"

\end_inset

) by checking if it is similar to a before defined 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
gls{PCM}
\end_layout

\end_inset

.
 Test 
\begin_inset CommandInset ref
LatexCommand ref
reference "/F230/"

\end_inset

 and 
\begin_inset CommandInset ref
LatexCommand ref
reference "/F240/"

\end_inset

.
\end_layout

\begin_layout Paragraph
Optional
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000
\begin_inset CommandInset label
LatexCommand label
name "/OT10/"

\end_inset

 Assert that 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
gls{Beagle}
\end_layout

\end_inset

 works for different operating systems and hardware by running measurements
 on different systems.
 Tests 
\begin_inset CommandInset ref
LatexCommand ref
reference "/OQ10/"

\end_inset

.
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000
\begin_inset CommandInset label
LatexCommand label
name "/OT20/"

\end_inset

 Assert that 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
gls{Beagle}
\end_layout

\end_inset

 detects invalid input (e.g.
 if the 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
gls{code decorator}
\end_layout

\end_inset

 does not fit to the code) and does not crash but responds to it in a acceptable
 way.
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000
\begin_inset CommandInset label
LatexCommand label
name "/OT30/"

\end_inset

 Assert that 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
gls{Beagle}
\end_layout

\end_inset

 works with different software through the 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
gls{CTA}
\end_layout

\end_inset

.
 Therefore it is necessary to test 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
gls{Beagle}
\end_layout

\end_inset

 with 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
gls{Kieker}
\end_layout

\end_inset

 and other 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
gls{measurement software}
\end_layout

\end_inset

.
 Tests 
\begin_inset CommandInset ref
LatexCommand ref
reference "/F40/"

\end_inset

, 
\begin_inset CommandInset ref
LatexCommand ref
reference "/Q20/"

\end_inset

 and 
\begin_inset CommandInset ref
LatexCommand ref
reference "/OQ30/"

\end_inset

.
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000
\begin_inset CommandInset label
LatexCommand label
name "/OT40/"

\end_inset

 Assert that 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
gls{Beagle}
\end_layout

\end_inset

 does not change source code files and other input except from the 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
gls{PCM}
\end_layout

\end_inset

.
 Tests 
\begin_inset CommandInset ref
LatexCommand ref
reference "/F50/"

\end_inset

.
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000
\begin_inset CommandInset label
LatexCommand label
name "/OT50/"

\end_inset

 Tests 
\begin_inset CommandInset ref
LatexCommand ref
reference "/OF10/"

\end_inset

, 
\begin_inset CommandInset ref
LatexCommand ref
reference "/OF20/"

\end_inset

 and 
\begin_inset CommandInset ref
LatexCommand ref
reference "/OF40/"

\end_inset

.
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000
\begin_inset CommandInset label
LatexCommand label
name "/OT60/"

\end_inset

 Assert that 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
gls{Beagle}
\end_layout

\end_inset

 reacts to different component's interface parameters.
 Tests 
\begin_inset CommandInset ref
LatexCommand ref
reference "/OF30/"

\end_inset

 and 
\begin_inset CommandInset ref
LatexCommand ref
reference "/OF50/"

\end_inset

.
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000
\begin_inset CommandInset label
LatexCommand label
name "/OT70/"

\end_inset

 Assert that it is possible for users to decide whether the whole source
 code or only parts of it are analysed.
 Therefore do several runs and determine the different parts which have
 to be tested.
 Tests 
\begin_inset CommandInset ref
LatexCommand ref
reference "/OF100/"

\end_inset

.
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000
\begin_inset CommandInset label
LatexCommand label
name "/OT80/"

\end_inset

 Assert that users are able to re-measure source code by measuring same
 source code several times.
 Tests 
\begin_inset CommandInset ref
LatexCommand ref
reference "/OF110/"

\end_inset

.
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000
\begin_inset CommandInset label
LatexCommand label
name "/OT90/"

\end_inset

 Assert that pausing and resuming measurements works as defined in 
\begin_inset CommandInset ref
LatexCommand ref
reference "/OF130/"

\end_inset

, 
\begin_inset CommandInset ref
LatexCommand ref
reference "/OF140/"

\end_inset

, 
\begin_inset CommandInset ref
LatexCommand ref
reference "/OF150/"

\end_inset

 and 
\begin_inset CommandInset ref
LatexCommand ref
reference "/OF160/"

\end_inset

 by testing same source code without pausing and several different numbers
 of pauses.
 The result has to be the same as long as nothing else changes.
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000
\begin_inset CommandInset label
LatexCommand label
name "/OT100/"

\end_inset

 Assert that 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
gls{Beagle}
\end_layout

\end_inset

 shuts down the computer if requested by a manual test.
 First, run a measurement and activate shutting down and then check if it
 worked and the results are saved.
 Tests 
\begin_inset CommandInset ref
LatexCommand ref
reference "/OF170/"

\end_inset

.
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000
\begin_inset CommandInset label
LatexCommand label
name "/OT110/"

\end_inset

 Assert that no user interaction is needed for measurements by running several
 measurements without user interaction.
 Tests 
\begin_inset CommandInset ref
LatexCommand ref
reference "/OQ20/"

\end_inset

.
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000
\begin_inset CommandInset label
LatexCommand label
name "/OT120/"

\end_inset

 Assert that it is possible to run 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
gls{Beagle}
\end_layout

\end_inset

 automatically after 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
gls{SoMoX}
\end_layout

\end_inset

 has finished by having a 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
gls{SoMoX}
\end_layout

\end_inset

 run with activated automatic 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
gls{Beagle}
\end_layout

\end_inset

 run.
 Another test run has to assert that between both runs no user interaction
 is needed.
 Tests 
\begin_inset CommandInset ref
LatexCommand ref
reference "/OQ100/"

\end_inset

 and 
\begin_inset CommandInset ref
LatexCommand ref
reference "/OQ110/"

\end_inset

.
\end_layout

\end_body
\end_document
