#LyX 2.1 created this file. For more info see http://www.lyx.org/
\lyxformat 474
\begin_document
\begin_header
\textclass sdqthesis
\use_default_options true
\master ../Requirements Specification.lyx
\maintain_unincluded_children false
\language british
\language_package default
\inputencoding utf8
\fontencoding global
\font_roman default
\font_sans default
\font_typewriter default
\font_math auto
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\spacing single
\use_hyperref false
\papersize default
\use_geometry true
\use_package amsmath 2
\use_package amssymb 1
\use_package cancel 1
\use_package esint 1
\use_package mathdots 1
\use_package mathtools 1
\use_package mhchem 1
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine basic
\cite_engine_type default
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 1
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Chapter
Discussion
\end_layout

\begin_layout Section
Assumptions
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000
\begin_inset CommandInset label
LatexCommand label
name "/C10/"

\end_inset

 The measured software was built using 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
gls{component-based software architecture}
\end_layout

\end_inset

.
 This assumption is derived from working with 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
gls{Palladio}
\end_layout

\end_inset

, which was built for analysing 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
gls{component-based software}
\end_layout

\end_inset

.
 Fortunately, it most of the time imposes little loss of generality, as
 any object oriented software can be described using terms of 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
gls{component-based software architecture}
\end_layout

\end_inset

 (regarding each class as a 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
gls{component}
\end_layout

\end_inset

 in the worst case).
 Such software will naturally not have the advantages that come with the
 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
gls{component-based software}
\end_layout

\end_inset

 approach, but might still be analysed for their performance.
\begin_inset Note Note
status open

\begin_layout Plain Layout
I (Joshua) think this to actually be true, but fear that the SDQ won't agree
 on this.
\end_layout

\end_inset


\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000
\begin_inset CommandInset label
LatexCommand label
name "/C20/"

\end_inset

 The measured software has a constant, deterministic runtime for a fixed
 configuration of input parameters, when ignoring influences of the hardware,
 operating system and error of measurement.
 This will be the case for most software.
 The fact the user tries to measure the software when using Beagle implies
 he expects it to behave in such a manner.
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000
\begin_inset CommandInset label
LatexCommand label
name "/C30/"

\end_inset

 The 
\begin_inset CommandInset ref
LatexCommand ref
reference "input artefacts"

\end_inset

 (see p.
 
\begin_inset CommandInset ref
LatexCommand pageref
reference "input artefacts"

\end_inset

) are integer.
 This means that all parts of the provided 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
gls{PCM}
\end_layout

\end_inset

 describe the software correctly, completely and exactly like implemented
 in the source code.
 Beagle relies on this to be true and may produce inaccurate or wrong results
 if it is not.
\end_layout

\begin_deeper
\begin_layout Standard
This assumption will not cause problems if the 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
gls{PCM}
\end_layout

\end_inset

 was re-engineered from the software's source code.
 But if the model and implementation diverged at any point (likely during
 the software's implementation), it may, however, lead to unexpected results.
\end_layout

\end_deeper
\begin_layout Section
Challenges
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000
\begin_inset CommandInset label
LatexCommand label
name "/C100/"

\end_inset

 There are a lot of factors influencing a CPU's performance: operating temperatu
re, number of other processes, previous load, and data in cache, to name
 just a few.
 Beagle aims to find ways to compensate these factors.
 This may involve disabling 
\noun on
Turbo Boost
\noun default
 on 
\noun on
Intel
\noun default
 CPUs, reading the cores' temperature and making sure the CPU is in a real
 world application thermal state, and further measures.
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000
\begin_inset CommandInset label
LatexCommand label
name "/C110/"

\end_inset

 Beagle must ensure the transferability and scalability of its measurement
 results across different hardware platforms.
 This stretches from software running on an average desktop pc via servers
 through to clusters of servers.
 Different hardware platforms vary in many different dimensions (CPU frequency,
 number of CPU cores, size and distribution of CPU caches, speed of RAM,
 network speed, hard disk throughput, etc.), yet the results have to be represent
ative.
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000
\begin_inset CommandInset label
LatexCommand label
name "/C120/"

\end_inset

 Beagle measures only one 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
gls{component}
\end_layout

\end_inset

 at a time, yet 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
glspl{component}
\end_layout

\end_inset

 interact with each other.
 If a 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
gls{component}
\end_layout

\end_inset

 calls another 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
gls{component}
\end_layout

\end_inset

 that takes a long time to return or does not return at all (e.g.
 because it is waiting for some input or it is defective), it might be wished
 or required to mock this 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
gls{component}
\end_layout

\end_inset

.
 Whether imitation of other 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
glsuserii{component}
\end_layout

\end_inset

 behaviour can be done automatically needs investigation.
 Such imitations may not affect the measurement results.
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000
\begin_inset CommandInset label
LatexCommand label
name "/C130/"

\end_inset

 On modern operating systems, multitasking is the default.
 Users are used to work on multiple tasks at the same time and have multiple
 programs running.
 This could, however, influence Beagle's measurement results.
 If a considerable impact on measurement results is recognised, strategies
 to avoid them can be developed.
 These may including prompting the user to close certain applications.
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000
\begin_inset CommandInset label
LatexCommand label
name "/C140/"

\end_inset

 Beagle aims to parametrise its measurement results by the 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
glsuseri{component}
\end_layout

\end_inset

 interface parameters.
 Such parametrisation will likely be described by a regression function
 
\begin_inset Formula $\mathbb{R}^{n}\rightarrow\mathbb{R}$
\end_inset

.
 This elicits multiple challenges:
\end_layout

\begin_deeper
\begin_layout Itemize
regression of multi-dimensional functions is a challenging task.
\end_layout

\begin_layout Itemize
the 
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
glsuserii{resource demand}
\end_layout

\end_inset

 regression functions might likely not be continuous.
\end_layout

\begin_layout Itemize
It is unclear what the real number representation of an arbitrary Java object
 might be.
\end_layout

\begin_layout Standard
Note that even if not all of the above points can be fully resolved, approximate
 parametrisation might still produce better results than no parametrisation
 at all.
\end_layout

\end_deeper
\end_body
\end_document
